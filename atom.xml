<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SourceX99</title>
  
  
  <link href="https://www.sourcex99.top/atom.xml" rel="self"/>
  
  <link href="https://www.sourcex99.top/"/>
  <updated>2020-10-01T01:04:17.706Z</updated>
  <id>https://www.sourcex99.top/</id>
  
  <author>
    <name>SourceX99</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据通信——实验笔记(Cisco Packet Tracer)</title>
    <link href="https://www.sourcex99.top/2020/09/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1-%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.sourcex99.top/2020/09/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1-%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/</id>
    <published>2020-09-30T07:46:27.000Z</published>
    <updated>2020-10-01T01:04:17.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实验一-二层交换机"><a href="#实验一-二层交换机" class="headerlink" title="实验一 二层交换机"></a>实验一 二层交换机</h3><pre><code class="tiki">实现两个交换机之间的通信关键的是给两个交换机开通vlan,配置vlan的接口为主机的后一位</code></pre><pre><code class="bash">配置交换机 （左）Switch&gt;en   进入特权模式Switch#conf t    进入配置模式Switch(config)#vlan 10    创建vlan 10Switch(config-vlan)#exit Switch(config)#vlan 20    创建vlan 20Switch(config-vlan)#exitSwitch(config)#inter fa 0/5   开通vlan 10 和vlan 20Switch(config-if)#switchport mode trunk    使用trunk模型Switch(config-if)#switchport trunk allowed vlan 10,20Switch(config-if)#exitSwitch(config)#inter fa 0/1   配置host1Switch(config-if)#switchport mode access  使用access模型Switch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#inter fa 0/2   配置host2Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 20Switch(config-if)#exitSwitch(config)#inter fa 0/3   配置host3Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#inter fa 0/4   配置host4Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 20Switch(config-if)#exit配置交换机（右）Switch&gt;enSwitch#conf tSwitch(config)#vlan 10Switch(config-vlan)#exitSwitch(config)#vlan 20Switch(config-vlan)#exitSwitch(config)#inter fa 0/3Switch(config-if)#switchport mode trunk Switch(config-if)#switchport trunk allowed vlan 10,20Switch(config-if)#exitSwitch(config)#inter fa 0/1Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#inter fa 0/1Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 20Switch(config-if)#exit</code></pre><p><img src="/2020/09/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1-%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20164432.png"></p><h3 id="实验二-二层路由交换"><a href="#实验二-二层路由交换" class="headerlink" title="实验二  二层路由交换"></a>实验二  二层路由交换</h3><pre><code class="tiki">路由可以实现不同网段间主机的通信（网关）</code></pre><pre><code class="bash">Router&gt;en  进入特权模式Router#conf t   进入配置模式Router(config)#interface g 0/0    配置路由接口 0/0  路由的接口是从0开始的Router(config-if)#no shutdown     启动路由Router(config-if)#ip address 192.168.1.254 255.255.255.0   添加网关和子网掩码Router(config-if)#exit            退出Router(config)#inter g 0/1Router(config-if)#no shutdown Router(config-if)#ip address 192.168.2.254 255.255.255.0Router(config-if)#exit</code></pre><p><img src="/2020/09/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1-%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20155434.png"></p><p>查看的和保存信息的相关命令</p><pre><code class="bash">Router#write  保存     保存后重启服务Router#show vlan   查看vlanRouter#show run    查看当前运行信息Router#show arp    查看arpRouter#show ip route  查看ip route</code></pre><h3 id="实验三-三层路由交换"><a href="#实验三-三层路由交换" class="headerlink" title="实验三   三层路由交换"></a>实验三   三层路由交换</h3><pre><code class="bash">配置交换机左Switch(config)#vlan 100       创建vlan 100Switch(config-vlan)#exitSwitch(config)#vlan 200       创建vlan 200Switch(config-vlan)#exitSwitch(config)#inter fa 0/3   配置交换机，将vlan 100 和vlan 200 开通Switch(config-if)#switchport mode trunk    使用trunk模型Switch(config-if)#switchport trunk allowed vlan 100,200Switch(config-if)#exitSwitch(config)#inter fa 0/1   配置host1Switch(config-if)#switchport mode access  使用access模型Switch(config-if)#switchport access vlan 100   将host1划分到vlan 100Switch(config-if)#exitSwitch(config)#inter fa 0/2   配置host2Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 200   将host2划分到vlan 200Switch(config-if)#exit配置交换机右Switch(config)#vlan 100Switch(config-vlan)#exitSwitch(config)#vlan 200Switch(config-vlan)#exitSwitch(config)#inter fastEthernet 0/3Switch(config-if)#switchport mode trunk Switch(config-if)#switchport trunk allowed vlan 100,200Switch(config-if)#exitSwitch(config)#inter fa 0/1Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 100Switch(config-if)#exitSwitch(config)#inter fa 0/2Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 200Switch(config-if)#exit配置路由交换机Switch(config)#vlan 100     创建vlan 100Switch(config-vlan)#exitSwitch(config)#vlan 200     创建vlan 200Switch(config-vlan)#exitSwitch(config)#inter fa 0/3  配置路由交换机Switch(config-if)#switchport trunk encapsulation dot1q     由于路由交换机的限制，不能直接使用trunk,需先开通 Switch(config-if)#switchport mode trunk      Switch(config-if)#switchport trunk allowed vlan 100,200Switch(config-if)#exitSwitch(config)#inter vlan 100         在三层路由中采用虚拟vlan 配置（注意这里进入到“配置模式“进行配置）Switch(config-if)#ip address 192.168.1.254 255.255.255.0   添加网关和子网掩码Switch(config-if)#exitSwitch(config)#ip routing   启动路由（配置模式）Switch(config)#inter vlan 200Switch(config-if)#ip address 192.168.2.254 255.255.255.0Switch(config-if)#exitSwitch(config)#ip routing</code></pre><p><img src="/2020/09/30/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1-%E5%AE%9E%E9%AA%8C%E7%AC%94%E8%AE%B0/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20161433.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;实验一-二层交换机&quot;&gt;&lt;a href=&quot;#实验一-二层交换机&quot; class=&quot;headerlink&quot; title=&quot;实验一 二层交换机&quot;&gt;&lt;/a&gt;实验一 二层交换机&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;tiki&quot;&gt;实现两个交换机之间的通信关键的是给两个交换</summary>
      
    
    
    
    
    <category term="组网 实验 笔记" scheme="https://www.sourcex99.top/tags/%E7%BB%84%E7%BD%91-%E5%AE%9E%E9%AA%8C-%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper+Hadoop+Hbase整合平台搭建（伪分布模式）</title>
    <link href="https://www.sourcex99.top/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/"/>
    <id>https://www.sourcex99.top/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/</id>
    <published>2020-09-25T06:42:46.000Z</published>
    <updated>2020-09-30T12:25:35.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JDK的卸载与安装</p><p>Zookeeper的安装</p><p>Hadoop的安装</p><p>Hbase的安装</p></blockquote><h3 id="伪分布式平台架构"><a href="#伪分布式平台架构" class="headerlink" title="伪分布式平台架构"></a>伪分布式平台架构</h3><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/IMG_20200925_163341.jpg"></p><p>首先我们需要下载搭建平台所需要的资源包并放入指定文件目录下，这里博主将包放入了根目录下的software文件中。</p><p>资源获取地址：<a href="https://pan.baidu.com/s/1EW8t5szEkG-1Uk6iqeRQbQ">https://pan.baidu.com/s/1EW8t5szEkG-1Uk6iqeRQbQ</a>    提取码：2a3c</p><p>通过xftp 6 将资源包传输到  /software  目录下</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20152213.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20152233.png"></p><p>我们可以在CentOS系统里查看传输好的文件</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20180819.png"></p><h3 id="一-JDK的卸载与安装"><a href="#一-JDK的卸载与安装" class="headerlink" title="一.JDK的卸载与安装"></a>一.JDK的卸载与安装</h3><p>从普通用户进入root 用户，在root用户卸载java（为了方便起见，博主将用户名设为hadoop,请不要与下面的hadoop用户混淆)</p><pre><code class="bash">[hadoop@promote~]$su - root</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20165058.png"></p><ul><li>卸载jdk</li></ul><pre><code class="bash">[root@promote ~]#rpm -qa|grep jdk      查看jdk包[root@promote ~]#rpm -qa|grep java     查看java包[root@promote ~]#rpm -e java-XXXX      用rpm命令删除包[root@promote ~]#yum remove java-XXXX  用yum命令删包，有些包会报“依赖项错误”，这时用yum就可以解决问题</code></pre><p>首先查看系统中的jdk包,发现有4个压缩包，我们要做的就是将它们删除</p><pre><code class="bash">[root@promote ~]#rpm -qa|grep jdk</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20155453.png"></p><p>删除jdk包，rpm  -e + 包名，最好是一个一个删除，不要用  rpm -e *  或   yum remove *   一次性将包删除，一次性删除可能会导致后面坏境的搭建出错</p><p>用   rpm -e + 包名，发现报错，此时用yum remove + 包名（推荐）</p><pre><code class="bash">[root@promote ~]#yum remove java-XXXX</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20155642.png"> </p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20155806.png"></p><p>​         删除完后，用   rpm -qa|grep jdk 会发现输出为空，说明jdk压缩包已删除</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20160025.png"></p><p>​          重复上述步骤删除java包</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20160053.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20160232.png"></p><ul><li>安装jdk</li></ul><p>卸载完jdk和java后，我们在root用户下新建java目录,并进入java目录</p><pre><code class="bash">[root@promote ~]#mkdir /java[root@promote ~]#cd /java</code></pre><p>我们可以查看传到/software目录下压缩包</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20161935.png"></p><p>接下来就是解压software目录下的  jdk-8u201-linux-x64.tar.gz</p><pre><code class="bash">[root@promote java]#tar -zxf /software/jdk-8u201-linux-x64.tar.gz</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20162002.png"></p><ul><li>修改java坏境变量</li></ul><p>进入hadoop用户，如果诸位系统中没有hadoop用户，可以新建一个hadoop用户,用 useradd hadoop,这样的好处就是当我们需要进行hadoop相关操作时就可以进入该用户，不需要再找了，同时也避免将其框架弄坏。</p><pre><code class="bash">[root@promote java]#su - hadoop</code></pre><p>打开  .bash_profile 配置文件，添加java环境变量</p><pre><code class="bash">vi .bash_profile</code></pre><pre><code class="tiki">#Java environmentJAVA_HOME=/java/jdk1.8.0_201PATH=$JAVA_HOME/bin:$PATHexport JAVA_HOME CLASSPATH PATH</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20161157.png"></p><p>source 文件</p><pre><code class="bash">[hadoop@promote ~]$source .bash_profile</code></pre><p>输入java -version,如果出现图片中的信息，说明配置成功。否则删除root下的java文件，重新进行配置</p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-25%20162112.png"></p><h3 id="二-Zookeeper的安装"><a href="#二-Zookeeper的安装" class="headerlink" title="二.Zookeeper的安装"></a>二.Zookeeper的安装</h3><ul><li>zookeeper软件包解压</li></ul><p>从hadoop用户退出，进入root用户</p><pre><code class="bash">[root@promote ~]#su - root</code></pre><p>在根目录下创建zookeeper目录</p><pre><code class="bash">[root@promote ~]#mkdir /zookeeper[root@promote ~]#cd /</code></pre><p>将zookeeper的权限变更给hadoop</p><pre><code class="bash">[root@promote /]#chown hadoop /zookeeper</code></pre><p>进入hadoop用户并切换到zookeeper目录</p><pre><code class="bash">[root@promote /]#su - hadoop[hadoop@promote ~]$cd /zookeeper</code></pre><p>在当前目录下解压缩zookeeper包</p><pre><code class="bash">[hadoop@promote zookeeper]$tar -zxf /software/zookeeper-3.4.13.tar.gz</code></pre><ul><li>zookeeper坏境变量设定</li></ul><p>配置zookeeper的环境变量，将下面的变量添加进去</p><p>“~”表示用户主目录</p><pre><code class="bash">[hadoop@promote zookeeper]$vi ~/.bash_profile     进入.bash_profile</code></pre><pre><code class="bash">#zookeeper environmentZOOKEEPER_HOME=/zookeeper/zookeeper-3.4.13PATH=$ZOOKEEPER_HOME/bin:$PATHexport ZOOKEEPER_HOME PATH</code></pre><p>source 文件</p><pre><code class="bash">[hadoop@promote zookeeper]$source ~/.bash_profile</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20164219.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20161754.png"></p><p>验证坏境变量是否配置成功</p><pre><code class="bash">[hadoop@promote zookeeper]$echo $PATH</code></pre><ul><li>zookeeper伪分布模式参数配置</li></ul><p>创建3个data和logs目录</p><pre><code class="bash">[hadoop@promote zookeeper]$mkdir -p zookeeper1/data[hadoop@promote zookeeper]$mkdir -p zookeeper2/data[hadoop@promote zookeeper]$mkdir -p zookeeper3/data[hadoop@promote zookeeper]$mkdir -p zookeeper1/logs[hadoop@promote zookeeper]$mkdir -p zookeeper2/logs [hadoop@promote zookeeper]$mkdir -p zookeeper3/logs</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20164412.png"></p><p>在3个data目录里创建myid文件</p><pre><code class="bash">[hadoop@promote zookeeper]$echo &#39;1&#39; &gt; zookeeper1/data/myid[hadoop@promote zookeeper]$echo &#39;2&#39; &gt; zookeeper2/data/myid[hadoop@promote zookeeper]$echo &#39;3&#39; &gt; zookeeper3/data/myid</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20164436.png"></p><p>查看myid里的id是否一一对应</p><pre><code class="bash">[hadoop@promote zookeeper]$cat zookeeper1/data/myid[hadoop@promote zookeeper]$cat zookeeper2/data/myid[hadoop@promote zookeeper]$cat zookeeper3/data/myid</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20164536.png"></p><p>进入zookeeper-3.4.13conf目录</p><pre><code class="bash">[hadoop@promote zookeeper]$cd /zookeeper/zookeeper-3.4.13/conf</code></pre><p>用zoo_sample.cfg去生成zoo1.cfg的congfig文件，然后对zoo1.cfg文件进行修改与添加</p><pre><code class="bash">[hadoop@promote conf]$cp zoo_sample.cfg zoo1.cfg   复制[hadoop@promote conf]$vi zoo1.cfg    进入文件</code></pre><p>将文件中的dataDir和clientPort两个参数注释掉，因为它们会影响后面的配置，同时将变量添加进去</p><pre><code class="bash">dataDir=/zookeeper/zookeeper1/datadataLogDir=/zookeeper/zookeeper1/logsclientPort=2181server.1=localhost:2888:3888server.2=localhost:2889:3889server.3=localhost:2890:3890</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20173242.png"></p><p>复制zoo1.cfg生成zoo2.cfg zoo3.cfg</p><pre><code class="bash">[hadoop@promote conf]$cp zoo1.cfg zoo2.cfg[hadoop@promote conf]$cp zoo1.cfg zoo3.cfg[hadoop@promote conf]$vi zoo2.cfg[hadoop@promote conf]$vi zoo3.cfg</code></pre><p><strong>注意，要修改zoo2.cfg和zoo3.cfg的dataDir、dataLogDir和clientPort中的序号</strong></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20183431.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20183453.png"></p><p>启动服务</p><pre><code class="bash">[hadoop@promote conf]$zkServer.sh start zoo1.cfg[hadoop@promote conf]$zkServer.sh start zoo2.cfg[hadoop@promote conf]$zkServer.sh start zoo3.cfg</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20173515.png"></p><p>查看工作进程</p><pre><code class="bash">[hadoop@promote conf]$jps</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20173654.png"></p><p>查看工作状态</p><pre><code class="bash">[hadoop@promote conf]$zkServer.sh status zoo1.cfg[hadoop@promote conf]$zkServer.sh status zoo2.cfg[hadoop@promote conf]$zkServer.sh status zoo3.cfg</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20173718.png"></p><p>出现上述的查询结果说明zookeeper已经配置完成</p><h3 id="三-Hadoop的安装"><a href="#三-Hadoop的安装" class="headerlink" title="三.Hadoop的安装"></a>三.Hadoop的安装</h3><ul><li>hadoop 软件包解压</li></ul><p>切换到root的主目录</p><pre><code class="bash">[hadoop@promote conf]$su - root</code></pre><p>在根目录下创建hadoop目录，并将hadoop目录的权限给hadoop用户，然后切换到hadoop用户，进入hadoop目录，同时在当前目录下解压hadoop包</p><pre><code class="bash">[root@promote ~]#mkdir /hadoop[root@promote ~]#cd /[root@promote /]#chown hadoop /hadoop[root@promote /]#su - hadoop[hadoop@promote ~]$cd /hadoop[hadoop@promote hadoop]$tar -zxf /software/hadoop-2.7.7.tar.gz </code></pre><ul><li>hadoop坏境变量设定</li></ul><p>添加hadoop环境变量</p><pre><code class="bash">[hadoop@promote hadoop]$vi ~/.bash_profile</code></pre><pre><code class="bash">#hadoop environmentHADOOP_HOME=/hadoop/hadoop-2.7.7PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATHexport HADOOP_HOME PATH</code></pre><pre><code class="bash">[hadoop@promote hadoop]$source ~/.bash_profile</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20174047.png"></p><p>验证配置是否成功</p><pre><code class="bash">[hadoop@promote hadoop]$echo $PATH</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20174131.png"></p><ul><li>hadoop参数配置</li></ul><p>创建 tmp data name 三个文件目录</p><pre><code class="bash">[hadoop@promote hadoop]$mkdir tmp data name</code></pre><p>配置本机免密码登录</p><pre><code class="bash">[hadoop@promote hadoop]$cd ~[hadoop@promote ~]$ssh-keygen -t rsa   输入三个enter</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20174238.png"></p><pre><code class="bash">[hadoop@promote ~]$cd  .ssh [hadoop@promote .ssh]$cp id_rsa.pub authorized_keys[hadoop@promote .ssh]ls[hadoop@promote .ssh]ssh localhost    输入yes</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-27%20175032.png"></p><p>这时无需密码就可登录localhost</p><ul><li>修改 hadoop-env.sh、core-site.xml、hdfs-site.xml、mapred-site.xml、yarn-env.sh、yarn-site.xml文件</li></ul><p>进入/etc下的hadoop</p><pre><code class="bash">[hadoop@promote .ssh]cd ~[hadoop@promote ~]$cd /hadoop/hadoop-2.7.7/etc/hadoop</code></pre><p>修改hadoop-env.sh和yarn-env.sh</p><p>因为这两个文件是环境变量文件，所以修改前建议先复制</p><p>修改文件的JAVA_HOME</p><pre><code class="bash">[hadoop@promote hadoop]$cp hadoop-env.sh hadoop-env.shark[hadoop@promote hadoop]$vi hadoop-env.sh</code></pre><pre><code class="bash">export JAVA_HOME=/java/jdk1.8.0_201</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20171532.png"></p><pre><code class="bash">[hadoop@promote hadoop]$cp yarn-env.sh  yarn-env.shark[hadoop@promote hadoop]$vi yarn-env.sh</code></pre><pre><code class="bash">export JAVA_HOME=/java/jdk1.8.0_201   这里需去掉注释“#”</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20171751.png"></p><p>修改.xml文件</p><p>修改此类文件，只需将变量添加到<configuration><configuration>之间</configuration></configuration></p><p>修改core-site.xml</p><pre><code class="bash">[hadoop@promote hadoop]$vi core-site.xml </code></pre><pre><code class="tiki">&lt;property&gt;&lt;name&gt;fs.defaultFS&lt;/name&gt;&lt;value&gt;hdfs://localhost:9000&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;&lt;value&gt;/hadoop/tmp&lt;/value&gt;&lt;/property&gt;</code></pre><p>修改hdfs-site.xml</p><pre><code class="bash">[hadoop@promote hadoop]$vi hdfs-site.xml </code></pre><pre><code class="tiki">&lt;property&gt;&lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;&lt;value&gt;/hadoop/name&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;&lt;value&gt;/hadoop/data&lt;/value&gt;&lt;/property&gt;&lt;property&gt;&lt;name&gt;dfs.replication&lt;/name&gt;&lt;value&gt;1&lt;/value&gt;&lt;/property&gt;</code></pre><p>用mapred-site.xml.template生成.xml文件并进行修改</p><pre><code class="bash">[hadoop@promote hadoop]$cp mapred-site.xml.template mapred-site.xml[hadoop@promote hadoop]$vi mapred-site.xml</code></pre><pre><code class="tiki">&lt;property&gt;&lt;name&gt;mapreduce.framework.name&lt;/name&gt;&lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt;</code></pre><p>修改 yarn-site.xml</p><pre><code class="bash">[hadoop@promote hadoop]$vi yarn-site.xml </code></pre><pre><code class="tiki">&lt;property&gt;&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;&lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20172226.png"></p><ul><li>Hadoop格式化，启动和验证</li></ul><p>格式化</p><pre><code class="bash">[hadoop@promote hadoop]$hadoop namenode -format</code></pre><p>这里要找到status,如果status=0，则说明前面的配置成功，如果status非零，则前面存在错误。博主格式化时出现status=1的情况。遇到错误不要害怕，我们要学会查看信息。博主通过查看上面的错误日志，发现hdfs文件中<value>缺少“/”，于是将其补上就可以了</value></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20173503.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20174131.png"></p><p>启动</p><p>启动dfs和yarn</p><pre><code class="bash">[hadoop@promote hadoop]$start-dfs.sh[hadoop@promote hadoop]$start-yarn.sh</code></pre><p>jps查看工作进程，如果出现以下6个进程则说明配置对了，如果少一个或多个，则前面的配置出错。如果缺少namenode、datanode，应该是hdfs文件错误，如果缺少ResourceManager应该是yarn.site.xml文件错误。修改前需将dfs和yarn停掉,运行时再启动。如果前面的6个配置文件都没有错误，然后启动dfs和yarn,查看jps依然没有变化，可以将 /hadoop目录下的data、name文件删除，重新格式化</p><pre><code class="bash">[hadoop@promote hadoop]$jps</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20183129.png"></p><p>验证</p><pre><code class="bash">[hadoop@promote hadoop]$ hadoop fs -mkdir /test[hadoop@promote hadoop]$ hadoop fs -ls /[hadoop@promote hadoop]$ cd /hadoop/hadoop-2.7.7/share/hadoop/mapreduce[hadoop@promote mapreduce]$ls</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20175754.png"></p><pre><code class="bash">[hadoop@promote mapreduce]$ hadoop jar hadoop-mapreduce-examples-2.7.7.jar pi 2 1000</code></pre><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20174721.png"></p><p><img src="/2020/09/25/Zookeeper-Hadoop-Hbase%E6%95%B4%E5%90%88%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BC%AA%E5%88%86%E5%B8%83%E6%A8%A1%E5%BC%8F%EF%BC%89/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-30%20174751.png"></p><p>至此，hadoop安装完成！</p><h3 id="更新中……………………………………………"><a href="#更新中……………………………………………" class="headerlink" title="更新中……………………………………………."></a>更新中…………………………………………….</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JDK的卸载与安装&lt;/p&gt;
&lt;p&gt;Zookeeper的安装&lt;/p&gt;
&lt;p&gt;Hadoop的安装&lt;/p&gt;
&lt;p&gt;Hbase的安装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;伪分布式平台架构&quot;&gt;&lt;a href=&quot;#伪分布式平台架构&quot; class</summary>
      
    
    
    
    
    <category term="Zookeeper Hadoop Hbase" scheme="https://www.sourcex99.top/tags/Zookeeper-Hadoop-Hbase/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客无法插入图片问题的解决</title>
    <link href="https://www.sourcex99.top/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.sourcex99.top/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2020-09-24T08:04:08.000Z</published>
    <updated>2020-09-25T09:48:43.434Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>修改_config.yml配置文件</p><p>Typora偏好设置</p><p>插件安装</p><p>修改hexo-asset-image文件中index.js的内容</p><p>生成博客</p></blockquote><h3 id="一-修改-config-yml配置文件"><a href="#一-修改-config-yml配置文件" class="headerlink" title="一.修改_config.yml配置文件"></a>一.修改_config.yml配置文件</h3><p>以博主的博客为例，博主博客的位置为D:/MyBlogs</p><pre><code class="bash">$ cd d:/MyBlogs    进入博客的根目录$ vi _config.yml   进入配置文件 ,输入i进入插入模式，此时可以改动文件内容，文件中的post_asset_folder 选项设为 true</code></pre><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20161052.png"></p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20161402.png"></p><p>post_asset_folder 的作用：</p><p>​        在git终端创建博客生成.md文件的同时，生成与其文件名相同的文件夹，该文件夹用来存放该篇博文的图片等资料</p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20162129.png"></p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20162150.png"></p><h3 id="二-Typora偏好设置"><a href="#二-Typora偏好设置" class="headerlink" title="二.Typora偏好设置"></a>二.Typora偏好设置</h3><p>打开Typora—&gt;文件—&gt;偏好设置—&gt;图像—&gt;复制到指定路径—&gt;./${filename}</p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20163057.png"></p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20163143.png"></p><p>作用：可以使得从网上copy一张图片粘贴进来时就可以自动保存到与md文件同名的文件夹里</p><h3 id="三-插件安装"><a href="#三-插件安装" class="headerlink" title="三.插件安装"></a>三.插件安装</h3><pre><code class="bash">$ npm install https://github.com/CodeFalling/hexo-asset-image --save</code></pre><p>​         作用:实现md文件到html文件的转换，经hexo  g 重新生成后，会在public/日期/文件名的目录下生成index.html和图片文件</p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20162325.png"></p><h3 id="四-修改hexo-asset-image文件中index-js的内容"><a href="#四-修改hexo-asset-image文件中index-js的内容" class="headerlink" title="四.修改hexo-asset-image文件中index.js的内容"></a>四.修改hexo-asset-image文件中index.js的内容</h3><p>index.js文件在node_modules文件夹下，可以用notepad++打开</p><p><img src="/2020/09/24/Hexo%E5%8D%9A%E5%AE%A2%E6%97%A0%E6%B3%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20164402.png"></p><p>将js中的代码替换成下面的代码</p><pre><code class="json">&#39;use strict&#39;;var cheerio = require(&#39;cheerio&#39;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123;  return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split(&#39;.&#39;);hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;  var config = hexo.config;  if(config.post_asset_folder)&#123;        var link = data.permalink;    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)       var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;    else       var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.    var endPos = link.lastIndexOf(&#39;/&#39;) + 1;    link = link.substring(beginPos, endPos);    var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];    for(var i = 0; i &lt; toprocess.length; i++)&#123;      var key = toprocess[i];      var $ = cheerio.load(data[key], &#123;        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false      &#125;);      $(&#39;img&#39;).each(function()&#123;        if ($(this).attr(&#39;src&#39;))&#123;            // For windows style path, we replace &#39;\&#39; to &#39;/&#39;.            var src = $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;/&#39;);            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;               !/^\s*\//.test(src)) &#123;              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.              // In addition, to support multi-level local directory.              var linkArray = link.split(&#39;/&#39;).filter(function(elem)&#123;                return elem != &#39;&#39;;              &#125;);              var srcArray = src.split(&#39;/&#39;).filter(function(elem)&#123;                return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;;              &#125;);              if(srcArray.length &gt; 1)                srcArray.shift();              src = srcArray.join(&#39;/&#39;);              $(this).attr(&#39;src&#39;, config.root + link + src);              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);            &#125;        &#125;else&#123;            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);            console.info&amp;&amp;console.info($(this));        &#125;      &#125;);      data[key] = $.html();    &#125;  &#125;&#125;);</code></pre><h3 id="五-生成博客"><a href="#五-生成博客" class="headerlink" title="五.生成博客"></a>五.生成博客</h3><pre><code class="bash">$ hexo clean$ hexo g$ hexo s     预览  Ctrl+C可取消$ hexo d     放到github上</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;修改_config.yml配置文件&lt;/p&gt;
&lt;p&gt;Typora偏好设置&lt;/p&gt;
&lt;p&gt;插件安装&lt;/p&gt;
&lt;p&gt;修改hexo-asset-image文件中index.js的内容&lt;/p&gt;
&lt;p&gt;生成博客&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id</summary>
      
    
    
    
    
    <category term="hexo 图片插入" scheme="https://www.sourcex99.top/tags/hexo-%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Windows10基于github的Hexo博客搭建及主题配置</title>
    <link href="https://www.sourcex99.top/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.sourcex99.top/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</id>
    <published>2020-09-24T04:55:12.000Z</published>
    <updated>2020-09-25T10:18:07.714Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>nodejs和git安装</p><p>hexo博客搭建</p><p>将博客同步到github上</p><p>博客主题设置（以安装snark为例）</p><p>主题优化</p></blockquote><ul><li>小记：最近发现之前搭好的博客打不开了，花了好些时间解决bug,但是上网查了很多的博客依然没有解决，因此决定重新从零开始，借此机会将搭建过程写到博客里，以下为搭建hexo博客及设置主题的步骤与过程。</li></ul><h3 id="一-安装nodejs和git"><a href="#一-安装nodejs和git" class="headerlink" title="一.安装nodejs和git"></a>一.安装nodejs和git</h3><ul><li><p>git 下载: <a href="https://git-scm.com/">https://git-scm.com/</a></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20214044.png"></p></li><li><p>下载好后，右击鼠标就会出现git的标志，这就表明git已经安装好</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20214337.png"></p></li><li><p>nodejs下载 :<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>(博主是windows系统，根据自己电脑系统进行选择)</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20214653.png"></p></li><li><p>下载后双击node.exe安装即可</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20214956.png"></p></li><li><p>在git终端查看node、npm和git版本以此来判断git和nodejs是否安装成功，如下图可知，git和nodejs安装成功</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20175651.png"></p></li></ul><h3 id="二-hexo博客搭建"><a href="#二-hexo博客搭建" class="headerlink" title="二.hexo博客搭建"></a>二.hexo博客搭建</h3><ul><li><p>创建一个放置自己博客的文件夹（例如：Myblogs,这个目录就是博客的根目录），在Myblogs文件夹中右击鼠标，从中找到<strong>Git Bash Here</strong>选项，打开 git 窗口</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20215308.png"></p></li><li><p>安装hexo（时间可能很长，耐心等待~）</p><pre><code class="bash">$ npm i -g hexo-cli    使用全局安装</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20175807.png"></p><pre><code class="bash">$ hexo init   初始化</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20180032.png"></p><pre><code class="bash">$ hexo g   生成博客目录文件</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20180101.png"></p><pre><code class="bash">$ hexo s   开启本地服务  Ctrl+C可取消预览</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20165724.png"></p></li></ul><ul><li><p>在浏览中打开” <a href="http://localhost:4000&quot;，可以看到博客已经在本地安装好">http://localhost:4000&quot;，可以看到博客已经在本地安装好</a></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20190049.png"></p></li></ul><h3 id="三-将博客同步到github上"><a href="#三-将博客同步到github上" class="headerlink" title="三.将博客同步到github上"></a>三.将博客同步到github上</h3><ul><li><p>配置userName和email </p><pre><code class="bash">$ git config --global user.name&quot;userName&quot;    userName 是github的用户名$ git config --global user.email&quot;yourEmail&quot;  email是github的邮箱</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20182111.png"></p></li><li><p>生成密钥</p><pre><code class="bash">$ cd ~/.ssh      查看是否有.shh文件夹$ ssh-keygen -t rsa -C &quot;yourEmail&quot;    连续输入三个回车，生成密钥（密钥的存放路径是：C:\Users\Administrator.ssh） </code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20182801.png"></p><pre><code class="bash">$ eval &quot;$(ssh-agent -s)&quot;     添加密钥到ssh-agent$ ssh-add ~/.ssh/id_rsa      添加生成的SSH key到ssh-agent</code></pre></li><li><p>创建仓库</p><p>新建一个仓库，仓库名为：<strong>username.github.io.git</strong>（例如，你的用户名为test，那么就是test.github.io.git）、选择public即可，勾选创建README</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20183119.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20183300.png"></p></li><li><p>生成密钥</p><p>点击右上角头像—&gt;setting —&gt; SSH and GPG keys —&gt; SSH keys,新建一个SSH key 将 C:\Users\Administrator.ssh 下的 id_rsa.pub文件里的内容复制上去(<strong>注：.pub文件用windows自带的软件无法打开，可以用notepad++打开</strong> )</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20183337.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20183523.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20184009.png"></p><pre><code class="bash">$ ssh -T git@github.com  #测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20185217.png"></p></li><li><p>安装hexo部署工具</p><pre><code class="bash">$ npm i hexo-deployer-git --save#修改站点配置文件_config.yml（在你搭建博客的文件夹中找到_config.yml文件，修改deploy（在末尾））$ vi _config.yml    进入vim编辑器,i--进入插入模式，此时方可改动文件，移动时可通过鼠标或上下键，退出时用 先按Esc,再输入  :wq   保存退出</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20185655.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20185809.png"></p></li><li><p>将本地的博客上传到github上</p><pre><code class="bash">$ cd D:/MyBlogs   进入博客根目录$ hexo g   生成文件$ hexo s   打开本地服务器，在本地预览效果$ hexo d   将博客上传到github上（可能需要等几分钟才能够在网页上看到更新后的效果）</code></pre></li><li><p><strong>可能会出Deployer not found :git,此时输入如下命令即可解决</strong></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20190131.png"></p><pre><code class="bash">$ npm install hexo-deployer-git --save</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20191121.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20191139.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20191208.png"></p></li><li><p>此时可以看到github上生成了多个文件</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20235630.png"></p></li><li><p>浏览器中输入username.github.io就可以浏览，如博主的 sourcex99.github.io</p></li><li><p>至此，hexo博客的搭建以及关联github已经完成，接下来进行主题的设置</p></li></ul><h3 id="四-博客主题设置（以安装snark为例）"><a href="#四-博客主题设置（以安装snark为例）" class="headerlink" title="四.博客主题设置（以安装snark为例）"></a>四.博客主题设置（<strong>以安装snark为例</strong>）</h3><ul><li><p>找到你想要的主题  网址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>    或 github上搜 hexo-themes</p></li><li><p>找到到主题后，进入主题项目所在的地址 ：<a href="https://github.com/Litreily/hexo-theme-snark">https://github.com/Litreily/hexo-theme-snark</a>，根据README.md进行安装</p></li><li><p>切换到博客的根目录 cd D:/MyBlogs</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20001720.png"></p></li><li><p>Installation</p><pre><code class="bash">#查看主题的路径，snark是https://github.com/litreily/hexo-theme-snark.git themes/snark,这里已经显示themes了，#所以直接在根目录(如：D：/MyBlogs)里安装，如果没有这个，要切换到themes中进行安装 (cd /themes)$ git clone https://github.com/litreily/hexo-theme-snark.git themes/snark$ npm install hexo-renderer-pug --save$ npm install hexo-renderer-sass --save</code></pre><pre><code class="bash">#修改highlight$ cd D:/MyBlogs      进入博客根目录$ vi _config.yml     进入vim编辑器,找到highlight进行如下修改</code></pre><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20194115.png"></p></li><li><p>修改博客名字、作者、theme(注意，配置文件一定要修改相对应的主题名称，否则博客用的还是默认的主题),修改完了 Esc(进入末行命令)  :wq  （保存后退出）</p><p> <img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20002123.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20003232.png"></p></li><li><p>添加支持包</p><pre><code class="bash">$ hexo new page archives$ hexo new page categories$ hexo new page tags$ hexo new page about</code></pre></li><li><p>安装插件</p><pre><code class="bash">$ npm install hexo-generator-feed --save      用于RSS$ npm install hexo-generator-search --save    用于local search$ npm install hexo-generator-sitemap --save   用于sitemap</code></pre></li><li><p>生成博客</p><pre><code class="bash">$ hexo clean      清除缓存$ hexo g          生成博客      #一定要先生成$ hexo d          关联仓库</code></pre><p>到这里，博客的主题就设置好了，在此基础上，博主对主题进行了优化</p></li></ul><h3 id="五-主题优化"><a href="#五-主题优化" class="headerlink" title="五.主题优化"></a>五.主题优化</h3><ul><li><p>修改图片 ——在snark文件中找到source下的img,加入你想要的图片，修改图片的名称为：profile.jpg</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-24%20003842.png"></p></li><li><p>添加live2d </p><p>models 地址：<a href="https://github.com/xiazeyu/live2d-widget-models">https://github.com/xiazeyu/live2d-widget-models</a></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20200732.png"></p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20200754.png"></p></li><li><p>在<strong>_config.ym</strong>l配置文件中添加如下代码</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20200834.png"></p></li><li><p>生成博客</p><pre><code class="bash">$ hexo clean$ hexo g$ hexo s  （预览）$ hexo d   放到github上</code></pre></li><li><p>浏览器中输入：userName.github.io （userName为自己github的用户名） ,最终博客如下</p><p><img src="/2020/09/24/Windows10%E5%9F%BA%E4%BA%8Egithub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202020-09-23%20200917.png"></p></li></ul><p>参考博客:</p><p><a href="https://blog.csdn.net/f2764052703/article/details/86596957?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-4">https://blog.csdn.net/f2764052703/article/details/86596957utm_medium=distribute.pc_relevant.none-task-blog-baidujs-4</a></p><p><a href="https://blog.csdn.net/weixin_41160054/article/details/89473887">https://blog.csdn.net/weixin_41160054/article/details/89473887</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;nodejs和git安装&lt;/p&gt;
&lt;p&gt;hexo博客搭建&lt;/p&gt;
&lt;p&gt;将博客同步到github上&lt;/p&gt;
&lt;p&gt;博客主题设置（以安装snark为例）&lt;/p&gt;
&lt;p&gt;主题优化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;小记：最近发现之前</summary>
      
    
    
    
    
    <category term="hexo 博客搭建 主题设置与优化" scheme="https://www.sourcex99.top/tags/hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.sourcex99.top/2020/09/23/hello-world/"/>
    <id>https://www.sourcex99.top/2020/09/23/hello-world/</id>
    <published>2020-09-23T09:58:59.725Z</published>
    <updated>2020-09-24T04:45:46.474Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
